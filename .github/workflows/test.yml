name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: quest
          POSTGRES_PASSWORD: quest_password
          POSTGRES_DB: quest_test
        ports:
          - 6432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:9.1
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: quest_test
          MYSQL_USER: quest
          MYSQL_PASSWORD: quest_password
        ports:
          - 6603:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u root -proot_password"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      httpbin:
        image: mccutchen/go-httpbin:v2.15.0
        ports:
          - 6123:8080

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev pkg-config

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-git-

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-

    - name: Build Quest
      run: cargo build --release

    - name: Install Quest binary
      run: cargo install --path .

    - name: Wait for services
      run: |
        echo "Waiting for PostgreSQL..."
        for i in {1..30}; do
          pg_isready -h localhost -p 6432 -U quest && break
          echo "Waiting for PostgreSQL to be ready..."
          sleep 1
        done

        echo "Waiting for MySQL..."
        for i in {1..30}; do
          mysqladmin ping -h localhost -P 6603 -u root -proot_password --silent && break
          echo "Waiting for MySQL to be ready..."
          sleep 1
        done

        echo "Waiting for httpbin..."
        for i in {1..30}; do
          curl -f http://localhost:6123/status/200 && break
          echo "Waiting for httpbin to be ready..."
          sleep 1
        done

    - name: Run test suite
      run: quest test
      env:
        # Ensure tests use the correct ports
        QUEST_POSTGRES_PORT: 6432
        QUEST_MYSQL_PORT: 6603
        QUEST_HTTPBIN_PORT: 6123

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          *.log
        if-no-files-found: ignore
